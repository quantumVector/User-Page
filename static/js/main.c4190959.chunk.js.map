{"version":3,"sources":["styles/Footer.module.css","hoc/AuthProvider.tsx","firebase.ts","components/Footer.tsx","hooks/useAuth.ts","components/Header.tsx","hoc/RequireAuth.tsx","components/FormController.tsx","utils/validators.ts","pages/Login.tsx","pages/Signup.tsx","assets/avatar-default-icon.png","components/AvatarBlock.tsx","components/EmailBlock.tsx","components/PasswordBlock.tsx","pages/UserPage.tsx","pages/NotFound.tsx","App.tsx","index.tsx","styles/Header.module.css","styles/EmailBlock.module.css","styles/UserPage.module.css"],"names":["module","exports","AuthContext","createContext","AuthProvider","children","useState","user","setUser","auth","getAuth","navigate","useNavigate","useEffect","unListen","onAuthStateChanged","authUser","id","uid","name","email","login","password","promise","Promise","resolve","reject","message","signInWithEmailAndPassword","then","userCredential","catch","error","code","signup","createUserWithEmailAndPassword","signout","signOut","console","log","values","useMemo","Provider","value","firebase","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Footer","className","classes","wrap","useAuth","useContext","Header","logo","links","Button","onClick","size","variant","component","NavLink","to","sx","marginRight","RequireAuth","redirectTo","EmailField","useFormContext","control","errors","formState","defaultValue","render","field","TextField","label","fullWidth","display","marginTop","marginBottom","width","helperText","PasswordField","type","ConfirmPasswordField","confirmPassword","SubmitButton","text","Box","textAlign","loginFormSchema","yup","shape","required","min","max","signupFormSchema","oneOf","Login","methods","useForm","resolver","yupResolver","setError","Alert","severity","style","margin","Grid","justifyContent","alignItems","onSubmit","handleSubmit","data","Signup","formSubmitHandler","a","AvatarBlock","Avatar","src","defaultAvatar","height","EmailBlock","emailEditMod","setEmailEditMode","emailValue","setEmailValue","success","setSuccess","marginLeft","onChange","e","target","currentUser","updateEmail","PasswordBlock","passwordEditMod","setPasswordEditMode","passwordValue","setPasswordValue","length","updatePassword","UserPage","items","NotFound","App","path","element","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4190959.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Footer_wrap__1hFOt\"};","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { createContext, FC, useState, Dispatch, SetStateAction, useEffect, useMemo } from 'react';\nimport { Auth, getAuth, onAuthStateChanged } from '@firebase/auth';\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut } from \"firebase/auth\";\nimport { useNavigate } from 'react-router-dom';\n\ninterface IUser {\n  id: string,\n  name: string | null,\n  email: string | null,\n}\n\ninterface IContext {\n  user: IUser | null,\n  setUser: TypeSetState<IUser | null>,\n  auth: Auth,\n  login: (email: string, password: string) => Promise<any>,\n  signup: (email: string, password: string) => Promise<any>,\n  signout: () => void,\n}\n\ntype TypeSetState<T> = Dispatch<SetStateAction<T>>;\n\nexport const AuthContext = createContext<IContext>({} as IContext);\n\nexport const AuthProvider: FC = ({ children }) => {\n  const [user, setUser] = useState<IUser | null>(null);\n  const auth = getAuth();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const unListen = onAuthStateChanged(auth, authUser => {\n      setUser(authUser ? {\n        id: authUser.uid,\n        name: '',\n        email: authUser.email,\n      } : null)\n    })\n    return () => unListen();\n  }, []);\n\n  const login = (email: string, password: string) => {\n    const promise = new Promise((resolve, reject) => {\n      let message: string = '';\n\n      signInWithEmailAndPassword(auth, email, password)\n        .then((userCredential) => {\n          const user = userCredential.user;\n          message = 'success';\n          navigate(`/user/${user.uid}`);\n          resolve(message);\n        })\n        .catch((error) => {\n          if (error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password')\n            message = 'The email or password is incorrect.';\n          resolve(message);\n        })\n    })\n\n    return promise;\n  }\n\n  const signup = (email: string, password: string) => {\n    const promise = new Promise((resolve, reject) => {\n      let message: string = '';\n\n      createUserWithEmailAndPassword(auth, email, password)\n        .then((userCredential) => {\n          const user = userCredential.user;\n          navigate(`/user/${user.uid}`);\n          resolve(message);\n        })\n        .catch((error) => {\n          if (error.code === 'auth/email-already-in-use')\n            message = 'This email address has already been registered.';\n          resolve(message);\n        });\n    })\n\n    return promise;\n  }\n\n  const signout = () => {\n    signOut(auth).then(() => {\n      navigate('/');\n    }).catch((error) => {\n      console.log('faild', error)\n    });\n  }\n\n  const values = useMemo(() => ({\n    user,\n    setUser,\n    auth,\n    login,\n    signup,\n    signout,\n  }), [user]);\n\n  return <AuthContext.Provider value={values}>\n    {children}\n  </AuthContext.Provider>\n};\n","import * as firebase from 'firebase/app';\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n});","import React, { FC } from 'react';\nimport classes from '../styles/Footer.module.css';\n\nconst Footer: FC = () => {\n  return (\n    <footer className={classes.wrap}>User Page Project 2021</footer>\n  )\n}\n\nexport default Footer;\n","import { useContext } from 'react';\nimport { AuthContext } from '../hoc/AuthProvider';\n\nexport const useAuth = () => {\n  const value = useContext(AuthContext);\n\n  return value;\n};\n","import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from '../styles/Header.module.css';\nimport { Button } from '@mui/material';\nimport { useAuth } from '../hooks/useAuth';\n\nconst Header: FC = () => {\n  const { user, signout } = useAuth();\n\n  const onLogOut = () => {\n    signout();\n  }\n\n  return (\n    <header className={classes.wrap}>\n      <div className={classes.logo}>User Page Project</div>\n      <div className={classes.links}>\n        {user\n          ? <Button onClick={onLogOut} size=\"large\" variant=\"contained\">Log out</Button>\n          : <>\n            <Button component={NavLink} to=\"/\" size=\"large\" variant=\"contained\" sx={{ marginRight: 3 }}>Login</Button>\n            <Button component={NavLink} to=\"/signup\" size=\"large\" variant=\"contained\">Sign up</Button>\n          </>\n        }\n      </div>\n    </header>\n  )\n}\n\nexport default Header;\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\n\nconst RequireAuth: React.ComponentType<any> = ({ children, redirectTo }) => {\n  const { user } = useAuth();\n\n  return user ? children : <Navigate to={redirectTo} />;\n}\n\nexport default RequireAuth;\n","import React, { FC } from 'react';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport { TextField, Button, Box } from '@mui/material';\n\nexport const EmailField: FC = () => {\n  const { control, formState: { errors } } = useFormContext();\n\n  return <Controller name='email' control={control} defaultValue=''\n    render={({ field }) => (\n      <TextField\n        {...field}\n        label='Email'\n        variant='outlined'\n        fullWidth\n        sx={{ display: 'block', marginTop: 3, marginBottom: 3, width: 400 }}\n        error={!!errors.email}\n        helperText={errors.email ? errors.email?.message : ''}\n      />\n    )}\n  />\n}\n\nexport const PasswordField: FC = () => {\n  const { control, formState: { errors } } = useFormContext();\n\n  return <Controller name='password' control={control} defaultValue=''\n    render={({ field }) => (\n      <TextField\n        {...field}\n        type='password'\n        label='Password'\n        variant='outlined'\n        fullWidth\n        sx={{ display: 'block', marginTop: 3, marginBottom: 3, width: 400 }}\n        error={!!errors.password}\n        helperText={errors.password ? errors.password?.message : ''}\n      />\n    )}\n  />\n}\n\nexport const ConfirmPasswordField: FC = () => {\n  const { control, formState: { errors } } = useFormContext();\n\n  return <Controller name='confirmPassword' control={control} defaultValue=''\n    render={({ field }) => (\n      <TextField\n        {...field}\n        type='password'\n        label='Confirm password'\n        variant='outlined'\n        fullWidth\n        sx={{ display: 'block', marginTop: 3, marginBottom: 3, width: 400 }}\n        error={!!errors.confirmPassword}\n        helperText={errors.confirmPassword ? errors.confirmPassword?.message : ''}\n      />\n    )}\n  />\n}\n\nexport const SubmitButton = ({ text }: IsText) => {\n  return <Box textAlign='center'>\n    <Button type='submit' variant='outlined' size=\"large\">\n      {text}\n    </Button>\n  </Box>\n}\n\ntype IsText = { text: string };\n\n","import * as yup from 'yup';\n\nexport const loginFormSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(8).max(20).required(),\n});\n\nexport const signupFormSchema = yup.object().shape({\n  /* fullName: yup.string().required().max(30), */\n  email: yup.string().email().required(),\n  password: yup.string().required().min(8).max(20),\n  confirmPassword: yup.string().required()\n    .oneOf([yup.ref('password'), null], 'Passwords must match'),\n});","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { FC, useState } from 'react';\nimport { Grid, Alert, Box } from '@mui/material';\nimport { useForm, SubmitHandler, FormProvider } from 'react-hook-form';\nimport { EmailField, PasswordField, SubmitButton } from '../components/FormController';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { loginFormSchema } from '../utils/validators';\nimport { Link, Navigate } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\n\nexport interface IFormInputs {\n  email: string,\n  password: string,\n};\n\nconst Login: FC = () => {\n  const { user, login } = useAuth();\n  const methods = useForm<IFormInputs>({\n    resolver: yupResolver(loginFormSchema),\n  });\n  const [error, setError] = useState('');\n\n  const formSubmitHandler: SubmitHandler<IFormInputs> = (data: IFormInputs) => {\n    login(data.email, data.password)\n      .then((message: string) => {\n        if (message !== 'success') setError(message);\n      });\n  }\n\n  return (\n    <>\n      {user && <Navigate to={`/user/${user.id}`} />}\n      <h1>Login</h1>\n      {error && (\n        <Alert severity='error' style={{ margin: 20 }}>\n          {error}\n        </Alert>\n      )}\n      <Grid display='flex' justifyContent='center' alignItems='center'>\n        <FormProvider {...methods}>\n          <form onSubmit={methods.handleSubmit(formSubmitHandler)}>\n            <EmailField />\n            <PasswordField />\n            <SubmitButton text='Login' />\n            <Box sx={{ textAlign: 'center', marginTop: 2 }}>\n              <div>Don't have an account? <Link to=\"/signup\">Sign up</Link></div>\n            </Box>\n          </form>\n        </FormProvider >\n      </Grid>\n    </>\n  )\n}\n\nexport default Login;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { FC, useState } from 'react';\nimport { Grid, Alert, Box } from '@mui/material';\nimport { useForm, SubmitHandler, FormProvider } from 'react-hook-form';\nimport { ConfirmPasswordField, EmailField, PasswordField, SubmitButton } from '../components/FormController';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { signupFormSchema } from '../utils/validators';\nimport { Link, Navigate } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\n\nexport interface IFormInputs {\n  fullName: string,\n  email: string,\n  password: string,\n  confirmPassword: string,\n};\n\nconst Signup: FC = () => {\n  const { user, signup } = useAuth();\n  const methods = useForm<IFormInputs>({\n    resolver: yupResolver(signupFormSchema),\n  });\n  const [error, setError] = useState('');\n\n  const formSubmitHandler: SubmitHandler<IFormInputs> = async (data: IFormInputs) => {\n    signup(data.email, data.password)\n      .then((message: string) => {\n        if (message !== 'success') setError(message);\n      });\n  }\n\n  return (\n    <>\n      {user && <Navigate to={`/user/${user.id}`} />}\n      <h1>Sign up</h1>\n      {error && (\n        <Alert severity='error' style={{ margin: 20 }}>\n          {error}\n        </Alert>\n      )}\n      <Grid display='flex' justifyContent='center' alignItems='center'>\n        <FormProvider {...methods}>\n          <form onSubmit={methods.handleSubmit(formSubmitHandler)}>\n            <EmailField />\n            <PasswordField />\n            <ConfirmPasswordField />\n            <SubmitButton text='Sign up' />\n            <Box sx={{ textAlign: 'center', marginTop: 2 }}>\n              <div>Already have an account?  <Link to=\"/\">Log in</Link></div>\n            </Box>\n          </form>\n        </FormProvider >\n      </Grid>\n    </>\n  )\n}\n\nexport default Signup;","export default __webpack_public_path__ + \"static/media/avatar-default-icon.3d77e961.png\";","import React, { FC } from 'react';\nimport { Avatar } from '@mui/material';\nimport defaultAvatar from '../assets/avatar-default-icon.png';\n\nconst AvatarBlock: FC = () => {\n  return (\n    <Avatar src={defaultAvatar} sx={{ width: 300, height: 300 }}></Avatar>\n  )\n}\n\nexport default AvatarBlock;\n","import React, { FC, useEffect, useState } from 'react';\nimport { Alert, Button, TextField } from '@mui/material';\nimport { updateEmail } from \"firebase/auth\";\nimport classes from '../styles/EmailBlock.module.css';\nimport { useAuth } from '../hooks/useAuth';\n\nconst EmailBlock: FC = () => {\n  const { auth, user } = useAuth();\n  const [emailEditMod, setEmailEditMode] = useState(false);\n  const [emailValue, setEmailValue] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  useEffect(() => {\n    if (user?.email) setEmailValue(user.email);\n  }, [user]);\n\n  const onUpdateEmail = () => {\n    if (auth.currentUser) {\n      updateEmail(auth.currentUser, emailValue).then(() => {\n        setSuccess('Email change was successful!');\n        setError('');\n      }).catch((error) => {\n        switch (error.code) {\n          case 'auth/requires-recent-login':\n            setError('You need to log into your account AGAIN to change your mail.');\n            break;\n          case 'auth/invalid-email':\n            setError('Please enter a valid email.');\n            break;\n          default:\n            setError(error.message);\n        }\n        setSuccess('');\n        if (user?.email) setEmailValue(user.email);\n      });\n    }\n  }\n\n  const saveNewEmail = () => {\n    if (emailValue) {\n      onUpdateEmail();\n    } else {\n      setError('Empty string is invalid.');\n      setSuccess('');\n      if (user?.email) setEmailValue(user?.email);\n    }\n\n    setEmailEditMode(false);\n  }\n\n  return (\n    <>\n      {error && (\n        <Alert severity='error' style={{ margin: 20 }}>\n          {error}\n        </Alert>\n      )}\n      {success && (\n        <Alert severity='success' style={{ margin: 20 }}>\n          {success}\n        </Alert>\n      )}\n      {!emailEditMod &&\n        <div className={classes.email}>\n          <div>{emailValue}</div>\n          <Button onClick={() => {\n            setEmailEditMode(true);\n            setEmailValue('');\n            setError('');\n          }} size=\"small\"\n            variant=\"contained\" sx={{ marginLeft: 2 }}>Change email</Button>\n        </div>}\n\n      {emailEditMod &&\n        <div className={classes.email}>\n          <TextField label=\"Enter new email\"\n            variant=\"standard\"\n            onChange={(e) => setEmailValue(e.target.value)}\n          />\n          <Button onClick={saveNewEmail} size=\"small\"\n            variant=\"contained\" sx={{ marginLeft: 2 }}>Save</Button>\n          <Button onClick={() => {\n            setEmailEditMode(false);\n            if (user?.email) setEmailValue(user?.email);\n            setError('');\n          }}\n            size=\"small\" variant=\"contained\" sx={{ marginLeft: 2 }}>Canсel</Button>\n        </div>}\n    </>\n  )\n}\n\nexport default EmailBlock;\n","import React, { FC, useState } from 'react';\nimport { Alert, Button, TextField } from '@mui/material';\nimport { updatePassword } from \"firebase/auth\";\nimport { useAuth } from '../hooks/useAuth';\n\nconst PasswordBlock: FC = () => {\n  const { auth } = useAuth();\n  const [passwordEditMod, setPasswordEditMode] = useState(false);\n  const [passwordValue, setPasswordValue] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const onUpdatePassword = () => {\n    if (auth.currentUser) {\n      updatePassword(auth.currentUser, passwordValue).then(() => {\n        setSuccess('Password change was successful!');\n        setError('');\n      }).catch((error) => {\n        error.code === 'auth/requires-recent-login'\n          ? setError('You need to log into your account AGAIN to change your password.')\n          : setError(error.message);\n      });\n    }\n  }\n\n  const saveNewPassword = () => {\n    if (passwordValue && passwordValue.length >= 8) {\n      onUpdatePassword();\n    } else {\n      setError('Password must be at least 8 characters.');\n    }\n\n    setPasswordEditMode(false);\n    setPasswordValue('');\n  }\n\n  return (\n    <>\n      {error && (\n        <Alert severity='error' style={{ margin: 20 }}>\n          {error}\n        </Alert>\n      )}\n      {success && (\n        <Alert severity='success' style={{ margin: 20 }}>\n          {success}\n        </Alert>\n      )}\n      {!passwordEditMod &&\n        <Button onClick={() => {\n          setPasswordEditMode(true);\n          setError('');\n          setSuccess('');\n        }} size=\"small\"\n          variant=\"contained\">Change password</Button>}\n\n      {passwordEditMod &&\n        <div>\n          <TextField label=\"Enter new password\"\n            type=\"password\"\n            variant=\"standard\"\n            onChange={(e) => setPasswordValue(e.target.value)}\n          />\n          <Button onClick={saveNewPassword} size=\"small\"\n            variant=\"contained\">Save</Button>\n          <Button onClick={() => setPasswordEditMode(false)}\n            size=\"small\" variant=\"contained\" sx={{ marginLeft: 2 }}>Canсel</Button>\n        </div>}\n    </>\n  )\n}\n\nexport default PasswordBlock;\n","import React, { FC } from 'react';\nimport AvatarBlock from '../components/AvatarBlock';\nimport EmailBlock from '../components/EmailBlock';\nimport PasswordBlock from '../components/PasswordBlock';\nimport classes from '../styles/UserPage.module.css';\n\nconst UserPage: FC = () => {\n  return (\n    <div className={classes.wrap}>\n      <div className={classes.items}>\n        <AvatarBlock />\n        <EmailBlock />\n        <PasswordBlock />\n      </div>\n    </div>\n  )\n}\n\nexport default UserPage;\n","import React, { FC } from 'react';\n\nconst NotFound: FC = () => {\n  return (\n    <div>\n      <h1>Not found</h1>\n    </div>\n  )\n}\n\nexport default NotFound;\n","import React, { FC } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport RequireAuth from './hoc/RequireAuth';\nimport { Login, NotFound, Signup, UserPage } from './pages';\n\nconst App: FC = () => {\n  return (\n    <div className='app-wrapper'>\n      <Header />\n      <div className='container'>\n        <Routes>\n          <Route path='/' element={<Login />} />\n          <Route path='/signup' element={<Signup />} />\n          <Route path=\"/user/:id\" element={\n            <RequireAuth redirectTo=\"/\">\n              <UserPage />\n            </RequireAuth>\n          } />\n          <Route path='*' element={<NotFound />} />\n        </Routes>\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter } from 'react-router-dom';\nimport { AuthProvider } from './hoc/AuthProvider';\nimport './firebase';\nimport App from './App';\n\n// HashRouter instead of BrowserRouter to work on github pages\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Header_wrap__1UueV\",\"logo\":\"Header_logo__1xOSZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"email\":\"EmailBlock_email__2OXxf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"UserPage_wrap__19rCu\",\"items\":\"UserPage_items__etOnb\"};"],"sourceRoot":""}