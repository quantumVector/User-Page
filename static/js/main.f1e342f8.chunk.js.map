{"version":3,"sources":["components/layout/Footer/Footer.module.css","components/layout/Footer/Footer.tsx","components/providers/AuthProvider.tsx","components/providers/useAuth.ts","components/layout/Header/Header.tsx","components/layout/Layout.tsx","components/formContoller/FormController.tsx","utils/validators.ts","components/pages/Login.tsx","components/pages/Signup.tsx","assets/avatar-default-icon.png","components/routes/list.ts","components/pages/UserPage/UserPage.tsx","components/pages/NotFound.tsx","components/routes/Routes.tsx","index.tsx","components/pages/UserPage/UserPage.module.css","components/layout/Header/Header.module.css"],"names":["module","exports","Footer","className","classes","wrap","AuthContext","createContext","AuthProvider","children","useState","user","setUser","auth","getAuth","useEffect","unListen","onAuthStateChanged","authUser","id","uid","name","email","values","useMemo","Provider","value","useAuth","useContext","Header","navigate","useNavigate","logo","links","Button","onClick","signOut","then","catch","error","console","log","size","variant","component","NavLink","to","sx","marginRight","Layout","EmailField","useFormContext","control","errors","formState","defaultValue","render","field","TextField","label","fullWidth","display","marginTop","marginBottom","width","helperText","message","PasswordField","type","password","ConfirmPasswordField","confirmPassword","SubmitButton","text","Box","textAlign","loginFormSchema","yup","shape","required","min","max","signupFormSchema","oneOf","Login","methods","useForm","resolver","yupResolver","setError","Alert","severity","style","margin","Grid","justifyContent","alignItems","height","onSubmit","handleSubmit","data","signInWithEmailAndPassword","userCredential","customError","code","Signup","formSubmitHandler","a","createUserWithEmailAndPassword","routes","path","element","emailEditMod","setEmailEditMode","emailValue","setEmailValue","passwordEditMod","setPasswordEditMode","passwordValue","setPasswordValue","success","setSuccess","Avatar","src","defaultAvatar","items","marginLeft","onChange","e","target","currentUser","updateEmail","item","length","updatePassword","onUpdatePassword","AppRoutes","map","route","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","StrictMode","document","getElementById"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,KAAO,uB,sJCQVC,EANI,WACjB,OACE,wBAAQC,UAAWC,IAAQC,KAA3B,qC,yCCaSC,EAAcC,wBAAwB,IAEtCC,EAAmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjC,EAAwBC,mBAAuB,MAA/C,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAOC,cAEbC,qBAAU,WACR,IAAMC,EAAWC,YAAmBJ,GAAM,SAAAK,GACxCN,EAAQM,EAAW,CACjBC,GAAID,EAASE,IACbC,KAAM,GACNC,MAAOJ,EAASI,OACd,SAGN,OAAO,kBAAMN,OACZ,IAEH,IAAMO,EAASC,mBAAQ,iBAAO,CAC5Bb,OACAC,UACAC,UACE,CAACF,IAEL,OAAO,cAACL,EAAYmB,SAAb,CAAsBC,MAAOH,EAA7B,SACJd,KCzCQkB,EAAU,WAGrB,OAFcC,qBAAWtB,I,iBCgCZuB,EA5BI,WACjB,MAAuBF,IAAfd,EAAR,EAAQA,KAAMF,EAAd,EAAcA,KACRmB,EAAWC,cAUjB,OACE,yBAAQ5B,UAAWC,IAAQC,KAA3B,UACE,qBAAKF,UAAWC,IAAQ4B,KAAxB,+BACA,qBAAK7B,UAAWC,IAAQ6B,MAAxB,SACGtB,EACG,cAACuB,EAAA,EAAD,CAAQC,QAbD,WACfC,YAAQvB,GAAMwB,MAAK,WACjBP,EAAS,QACRQ,OAAM,SAACC,GACRC,QAAQC,IAAI,QAASF,OASYG,KAAK,QAAQC,QAAQ,YAAhD,qBACA,qCACA,cAACT,EAAA,EAAD,CAAQU,UAAWC,IAASC,GAAG,IAAIJ,KAAK,QAAQC,QAAQ,YAAYI,GAAI,CAAEC,YAAa,GAAvF,mBACA,cAACd,EAAA,EAAD,CAAQU,UAAWC,IAASC,GAAG,UAAUJ,KAAK,QAAQC,QAAQ,YAA9D,8BCXGM,EAZI,WACjB,OACE,sBAAK9C,UAAU,cAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,MAEF,cAAC,EAAD,Q,oDCUO+C,EAAa,WACxB,MAA2CC,cAAnCC,EAAR,EAAQA,QAAsBC,EAA9B,EAAiBC,UAAaD,OAE9B,OAAO,cAAC,IAAD,CAAYhC,KAAK,QAAQ+B,QAASA,EAASG,aAAa,GAC7DC,OAAQ,kBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEE,MAAM,QACNhB,QAAQ,WACRiB,WAAS,EACTb,GAAI,CAAEc,QAAS,QAASC,UAAW,EAAGC,aAAc,EAAGC,MAAO,KAC9DzB,QAASc,EAAO/B,MAChB2C,WAAYZ,EAAO/B,MAAP,UAAe+B,EAAO/B,aAAtB,aAAe,EAAc4C,QAAU,UAM9CC,EAAgB,WAC3B,MAA2ChB,cAAnCC,EAAR,EAAQA,QAAsBC,EAA9B,EAAiBC,UAAaD,OAE9B,OAAO,cAAC,IAAD,CAAYhC,KAAK,WAAW+B,QAASA,EAASG,aAAa,GAChEC,OAAQ,kBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEW,KAAK,WACLT,MAAM,WACNhB,QAAQ,WACRiB,WAAS,EACTb,GAAI,CAAEc,QAAS,QAASC,UAAW,EAAGC,aAAc,EAAGC,MAAO,KAC9DzB,QAASc,EAAOgB,SAChBJ,WAAYZ,EAAOgB,SAAP,UAAkBhB,EAAOgB,gBAAzB,aAAkB,EAAiBH,QAAU,UAMpDI,EAAuB,WAClC,MAA2CnB,cAAnCC,EAAR,EAAQA,QAAsBC,EAA9B,EAAiBC,UAAaD,OAE9B,OAAO,cAAC,IAAD,CAAYhC,KAAK,kBAAkB+B,QAASA,EAASG,aAAa,GACvEC,OAAQ,kBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEW,KAAK,WACLT,MAAM,mBACNhB,QAAQ,WACRiB,WAAS,EACTb,GAAI,CAAEc,QAAS,QAASC,UAAW,EAAGC,aAAc,EAAGC,MAAO,KAC9DzB,QAASc,EAAOkB,gBAChBN,WAAYZ,EAAOkB,gBAAP,UAAyBlB,EAAOkB,uBAAhC,aAAyB,EAAwBL,QAAU,UAMlEM,EAAe,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAC7B,OAAO,cAACC,EAAA,EAAD,CAAKC,UAAU,SAAf,SACL,cAACzC,EAAA,EAAD,CAAQkC,KAAK,SAASzB,QAAQ,WAAWD,KAAK,QAA9C,SACG+B,O,gBC/EMG,EAAkBC,MAAaC,MAAM,CAChDxD,MAAOuD,MAAavD,QAAQyD,WAC5BV,SAAUQ,MAAaG,IAAI,GAAGC,IAAI,IAAIF,aAG3BG,EAAmBL,MAAaC,MAAM,CAEjDxD,MAAOuD,MAAavD,QAAQyD,WAC5BV,SAAUQ,MAAaE,WAAWC,IAAI,GAAGC,IAAI,IAC7CV,gBAAiBM,MAAaE,WAC3BI,MAAM,CAACN,IAAQ,YAAa,MAAO,0BCoDzBO,EAjDG,WAChB,MAAuBzD,IAAfd,EAAR,EAAQA,KAAMF,EAAd,EAAcA,KACR0E,EAAUC,YAAqB,CACnCC,SAAUC,YAAYZ,KAExB,EAA0BlE,mBAAS,IAAnC,mBAAO6B,EAAP,KAAckD,EAAd,KACM3D,EAAWC,cAEjBhB,qBAAU,WACJJ,GAAMmB,EAAS,SAAD,OAAUnB,EAAKQ,OAChC,CAACR,IAkBJ,OACE,qCACG4B,GACC,cAACmD,EAAA,EAAD,CAAOC,SAAS,QAAQC,MAAO,CAAEC,OAAQ,IAAzC,SACGtD,IAGL,uCACA,cAACuD,EAAA,EAAD,CAAMjC,QAAQ,OAAOkC,eAAe,SAASC,WAAW,SAASC,OAAO,GAAxE,SACE,cAAC,IAAD,2BAAkBZ,GAAlB,aACE,uBAAMa,SAAUb,EAAQc,cA1BsB,SAACC,GACrDC,YAA2BxF,EAAMuF,EAAK9E,MAAO8E,EAAK/B,UAC/ChC,MAAK,SAACiE,GACL,IAAM3F,EAAO2F,EAAe3F,KAC5BmB,EAAS,SAAD,OAAUnB,EAAKS,SAExBkB,OAAM,SAACC,GACN,IAAIgE,EAAsB,GAEP,wBAAfhE,EAAMiE,MAAiD,wBAAfjE,EAAMiE,OAChDD,EAAc,uCAEhBd,EAASc,GAAehE,EAAM2B,eAc5B,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAcO,KAAK,sB,uBCYhBgC,EAlDI,WACjB,MAAuB9E,IAAfd,EAAR,EAAQA,KAAMF,EAAd,EAAcA,KACR0E,EAAUC,YAAqB,CACnCC,SAAUC,YAAYN,KAExB,EAA0BxE,mBAAS,IAAnC,mBAAO6B,EAAP,KAAckD,EAAd,KACM3D,EAAWC,cAEjBhB,qBAAU,WACJJ,GAAMmB,EAAS,SAAD,OAAUnB,EAAKQ,OAChC,CAACR,IAEJ,IAAM+F,EAA6C,uCAAG,WAAON,GAAP,SAAAO,EAAA,sEAC9CC,YAA+B/F,EAAMuF,EAAK9E,MAAO8E,EAAK/B,UACzDhC,MAAK,SAACiE,GACL,IAAM3F,EAAO2F,EAAe3F,KAC5BmB,EAAS,SAAD,OAAUnB,EAAKS,SAExBkB,OAAM,SAACC,GACN,IAAIgE,EAAsB,GAEP,8BAAfhE,EAAMiE,OACRD,EAAc,mDAEhBd,EAASc,GAAehE,EAAM2B,YAZkB,2CAAH,sDAgBnD,OACE,qCACG3B,GACC,cAACmD,EAAA,EAAD,CAAOC,SAAS,QAAQC,MAAO,CAAEC,OAAQ,IAAzC,SACGtD,IAGL,yCACA,cAACuD,EAAA,EAAD,CAAMjC,QAAQ,OAAOkC,eAAe,SAASC,WAAW,SAASC,OAAO,GAAxE,SACE,cAAC,IAAD,2BAAkBZ,GAAlB,aACE,uBAAMa,SAAUb,EAAQc,aAAaO,GAArC,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAcjC,KAAK,wB,0BC5DhB,MAA0B,gDCE5BoC,EAAS,CACpB,CACEC,KAAM,IACNC,QAAS3B,EACTvE,MAAM,GAER,CACEiG,KAAM,YACNC,QCHiB,WACnB,MAAuBpF,IAAfd,EAAR,EAAQA,KAAMF,EAAd,EAAcA,KACd,EAAyCD,oBAAS,GAAlD,mBAAOsG,EAAP,KAAqBC,EAArB,KACA,EAAoCvG,mBAAS,IAA7C,mBAAOwG,EAAP,KAAmBC,EAAnB,KACA,EAA+CzG,oBAAS,GAAxD,mBAAO0G,EAAP,KAAwBC,EAAxB,KACA,EAA0C3G,mBAAS,IAAnD,mBAAO4G,EAAP,KAAsBC,EAAtB,KACA,EAA0B7G,mBAAS,IAAnC,mBAAO6B,EAAP,KAAckD,EAAd,KACA,EAA8B/E,mBAAS,IAAvC,mBAAO8G,EAAP,KAAgBC,EAAhB,KAEA1G,qBAAU,YACR,OAAIJ,QAAJ,IAAIA,OAAJ,EAAIA,EAAMW,QAAO6F,EAAcxG,EAAKW,SACnC,CAACX,IAwDJ,OACE,sBAAKR,UAAWC,IAAQC,KAAxB,UACE,cAACqH,EAAA,EAAD,CAAQC,IAAKC,EAAe7E,GAAI,CAAEiB,MAAO,IAAKiC,OAAQ,OACrD1D,GACC,cAACmD,EAAA,EAAD,CAAOC,SAAS,QAAQC,MAAO,CAAEC,OAAQ,IAAzC,SACGtD,IAGJiF,GACC,cAAC9B,EAAA,EAAD,CAAOC,SAAS,UAAUC,MAAO,CAAEC,OAAQ,IAA3C,SACG2B,IAGL,sBAAKrH,UAAWC,IAAQyH,MAAxB,WAEIb,GACA,sBAAK7G,UAAWC,IAAQkB,MAAxB,UACE,8BAAM4F,IACN,cAAChF,EAAA,EAAD,CAAQC,QAAS,kBAAM8E,GAAiB,IAAOvE,KAAK,QAClDC,QAAQ,YAAYI,GAAI,CAAE+E,WAAY,GADxC,6BAIHd,GACC,sBAAK7G,UAAWC,IAAQkB,MAAxB,UACE,cAACoC,EAAA,EAAD,CAAWC,MAAM,kBACfhB,QAAQ,WACRoF,SAAU,SAACC,GAAD,OAAOb,EAAca,EAAEC,OAAOvG,UAE1C,cAACQ,EAAA,EAAD,CAAQC,QA7DG,WApBftB,EAAKqH,aACPC,YAAYtH,EAAKqH,YAAahB,GAAY7E,MAAK,WAC7CoF,EAAW,gCACXhC,EAAS,OACRnD,OAAM,SAACC,GACR,IAAIgE,EAAsB,GAEP,+BAAfhE,EAAMiE,OACRD,EAAc,gEACG,uBAAfhE,EAAMiE,OACRD,EAAc,+BAEhBd,EAASc,GAAehE,EAAM2B,SAC9BuD,EAAW,KAEX,OAAI9G,QAAJ,IAAIA,OAAJ,EAAIA,EAAMW,QAAO6F,EAAcxG,EAAKW,UAOxC2F,GAAiB,IA2DsBvE,KAAK,QAClCC,QAAQ,YAAYI,GAAI,CAAE+E,WAAY,GADxC,kBAEA,cAAC5F,EAAA,EAAD,CAAQC,QAAS,kBAAM8E,GAAiB,IACtCvE,KAAK,QAAQC,QAAQ,YAAYI,GAAI,CAAE+E,WAAY,GADrD,6BAIFV,GACA,cAAClF,EAAA,EAAD,CAAQC,QAAS,kBAAMkF,GAAoB,IAAO3E,KAAK,QACrDC,QAAQ,YADV,6BAGDyE,GACC,sBAAKjH,UAAWC,IAAQgI,KAAxB,UACE,cAAC1E,EAAA,EAAD,CAAWC,MAAM,qBACfS,KAAK,WACLzB,QAAQ,WACRoF,SAAU,SAACC,GAAD,OAAOT,EAAiBS,EAAEC,OAAOvG,UAE7C,cAACQ,EAAA,EAAD,CAAQC,QAnDM,YAtBC,WACvB,IAAIoE,EAAsB,GAEtBe,EAAce,OAAS,GAEzB5C,EADAc,EAAc,2CAIZ1F,EAAKqH,aACPI,YAAezH,EAAKqH,YAAaZ,GAAejF,MAAK,WACnDoF,EAAW,mCACXhC,EAAS,OACRnD,OAAM,SAACC,GACW,+BAAfA,EAAMiE,OACRD,EAAc,oEAEhBd,EAASc,GAAehE,EAAM2B,SAC9BuD,EAAW,OAMfc,GACAlB,GAAoB,GACpBE,EAAiB,KAgDyB7E,KAAK,QACrCC,QAAQ,YADV,kBAEA,cAACT,EAAA,EAAD,CAAQC,QAAS,kBAAMkF,GAAoB,IACzC3E,KAAK,QAAQC,QAAQ,YAAYI,GAAI,CAAE+E,WAAY,GADrD,mCD9GRjH,MAAM,GAER,CACEiG,KAAM,UACNC,QAASN,EACT5F,MAAM,GAER,CACEiG,KAAM,IACNC,QElBiB,WACnB,OACE,8BACE,8CFgBFlG,MAAM,IGMK2H,EApBO,WACpB,IAAQ7H,EAASgB,IAAThB,KAER,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOmG,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,SACGF,EAAO4B,KAAI,SAAAC,GACV,OACE,cAAC,IAAD,CACE5B,KAAM4B,EAAM5B,KACZC,QAAS2B,EAAM7H,OAASF,EAAO,cAAC,EAAD,IAAY,cAAC+H,EAAM3B,QAAP,KAF7C,gBAGgB2B,EAAM5B,eCTlC6B,IAAuB,CACrBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAGjBC,IAAS3F,OACP,cAAC,IAAM4F,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UAINC,SAASC,eAAe,U,mBC1B1BtJ,EAAOC,QAAU,CAAC,KAAO,uBAAuB,MAAQ,wBAAwB,MAAQ,0B,mBCAxFD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,KAAO,wB","file":"static/js/main.f1e342f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Footer_wrap__2e-v6\"};","import React, { FC } from 'react';\nimport classes from './Footer.module.css';\n\nconst Footer: FC = () => {\n  return (\n    <footer className={classes.wrap}>User Page Project 2021</footer>\n  )\n}\n\nexport default Footer;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Auth, getAuth, onAuthStateChanged } from '@firebase/auth';\nimport React, { createContext, FC, useState, Dispatch, SetStateAction, useEffect, useMemo } from 'react';\n\ninterface IUser {\n  id: string,\n  name: string | null,\n  email: string | null,\n}\n\ninterface IContext {\n  user: IUser | null,\n  setUser: TypeSetState<IUser | null>,\n  auth: Auth,\n}\n\ntype TypeSetState<T> = Dispatch<SetStateAction<T>>;\n\nexport const AuthContext = createContext<IContext>({} as IContext);\n\nexport const AuthProvider: FC = ({ children }) => {\n  const [user, setUser] = useState<IUser | null>(null);\n\n  const auth = getAuth();\n\n  useEffect(() => {\n    const unListen = onAuthStateChanged(auth, authUser => {\n      setUser(authUser ? {\n        id: authUser.uid,\n        name: '',\n        email: authUser.email,\n      } : null)\n    })\n\n    return () => unListen();\n  }, []);\n\n  const values = useMemo(() => ({\n    user,\n    setUser,\n    auth\n  }), [user]);\n\n  return <AuthContext.Provider value={values}>\n    {children}\n  </AuthContext.Provider>\n};\n","import { useContext } from 'react';\nimport { AuthContext } from './AuthProvider';\n\nexport const useAuth = () => {\n  const value = useContext(AuthContext);\n\n  return value;\n};\n","import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './Header.module.css';\nimport { useAuth } from '../../providers/useAuth';\nimport { signOut } from \"firebase/auth\";\nimport { useNavigate } from 'react-router-dom';\nimport { Button } from '@mui/material';\n\nconst Header: FC = () => {\n  const { auth, user } = useAuth();\n  const navigate = useNavigate();\n\n  const onLogOut = () => {\n    signOut(auth).then(() => {\n      navigate('/');\n    }).catch((error) => {\n      console.log('faild', error)\n    });\n  }\n\n  return (\n    <header className={classes.wrap}>\n      <div className={classes.logo}>User Page Project</div>\n      <div className={classes.links}>\n        {user\n          ? <Button onClick={onLogOut} size=\"large\" variant=\"contained\">Log out</Button>\n          : <>\n            <Button component={NavLink} to=\"/\" size=\"large\" variant=\"contained\" sx={{ marginRight: 3 }}>Login</Button>\n            <Button component={NavLink} to=\"/signup\" size=\"large\" variant=\"contained\">Sign up</Button>\n          </>\n        }\n      </div>\n    </header>\n  )\n}\n\nexport default Header;\n","import React, { FC } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport Footer from './Footer/Footer';\nimport Header from './Header/Header';\n\nconst Layout: FC = () => {\n  return (\n    <div className='app-wrapper'>\n      <Header />\n      <div className='container'>\n        <Outlet />\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nexport default Layout;\n","import React from 'react';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport { TextField, Button, Box } from '@mui/material';\n\nexport const FullNameField = () => {\n  const { control, formState: { errors } } = useFormContext();\n\n  return <Controller name='fullName' control={control} defaultValue=''\n    render={({ field }) => (\n      <TextField\n        {...field}\n        label='Full Name'\n        variant='outlined'\n        fullWidth\n        sx={{ display: 'block', marginTop: 3, marginBottom: 3, width: 400 }}\n        error={!!errors.fullName}\n        helperText={errors.fullName ? errors.fullName?.message : ''}\n      />\n    )}\n  />\n}\n\nexport const EmailField = () => {\n  const { control, formState: { errors } } = useFormContext();\n\n  return <Controller name='email' control={control} defaultValue=''\n    render={({ field }) => (\n      <TextField\n        {...field}\n        label='Email'\n        variant='outlined'\n        fullWidth\n        sx={{ display: 'block', marginTop: 3, marginBottom: 3, width: 400 }}\n        error={!!errors.email}\n        helperText={errors.email ? errors.email?.message : ''}\n      />\n    )}\n  />\n}\n\nexport const PasswordField = () => {\n  const { control, formState: { errors } } = useFormContext();\n\n  return <Controller name='password' control={control} defaultValue=''\n    render={({ field }) => (\n      <TextField\n        {...field}\n        type='password'\n        label='Password'\n        variant='outlined'\n        fullWidth\n        sx={{ display: 'block', marginTop: 3, marginBottom: 3, width: 400 }}\n        error={!!errors.password}\n        helperText={errors.password ? errors.password?.message : ''}\n      />\n    )}\n  />\n}\n\nexport const ConfirmPasswordField = () => {\n  const { control, formState: { errors } } = useFormContext();\n\n  return <Controller name='confirmPassword' control={control} defaultValue=''\n    render={({ field }) => (\n      <TextField\n        {...field}\n        type='password'\n        label='Confirm password'\n        variant='outlined'\n        fullWidth\n        sx={{ display: 'block', marginTop: 3, marginBottom: 3, width: 400 }}\n        error={!!errors.confirmPassword}\n        helperText={errors.confirmPassword ? errors.confirmPassword?.message : ''}\n      />\n    )}\n  />\n}\n\nexport const SubmitButton = ({ text }: IsText) => {\n  return <Box textAlign='center'>\n    <Button type='submit' variant='outlined' size=\"large\">\n      {text}\n    </Button>\n  </Box>\n}\n\ntype IsText = { text: string };\n\n","import * as yup from 'yup';\n\nexport const loginFormSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(8).max(20).required(),\n});\n\nexport const signupFormSchema = yup.object().shape({\n  /* fullName: yup.string().required().max(30), */\n  email: yup.string().email().required(),\n  password: yup.string().required().min(8).max(20),\n  confirmPassword: yup.string().required()\n    .oneOf([yup.ref('password'), null], 'Passwords must match'),\n});","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { FC, useEffect, useState } from 'react';\nimport { Grid, Alert } from '@mui/material';\nimport { useForm, SubmitHandler, FormProvider } from 'react-hook-form';\nimport { EmailField, PasswordField, SubmitButton } from '../formContoller/FormController';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { loginFormSchema } from '../../utils/validators';\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { useAuth } from '../providers/useAuth';\nimport { useNavigate } from 'react-router-dom';\nexport interface IFormInputs {\n  email: string,\n  password: string,\n};\n\nconst Login: FC = () => {\n  const { auth, user } = useAuth();\n  const methods = useForm<IFormInputs>({\n    resolver: yupResolver(loginFormSchema),\n  });\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (user) navigate(`/user/${user.id}`);\n  }, [user]);\n\n  const formSubmitHandler: SubmitHandler<IFormInputs> = (data: IFormInputs) => {\n    signInWithEmailAndPassword(auth, data.email, data.password)\n      .then((userCredential) => {\n        const user = userCredential.user;\n        navigate(`/user/${user.uid}`);\n      })\n      .catch((error) => {\n        let customError: string = '';\n\n        if (error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password')\n          customError = 'The email or password is incorrect.';\n\n        setError(customError || error.message);\n      });\n  }\n\n  return (\n    <>\n      {error && (\n        <Alert severity='error' style={{ margin: 20 }}>\n          {error}\n        </Alert>\n      )}\n      <h1>Login</h1>\n      <Grid display='flex' justifyContent='center' alignItems='center' height=''>\n        <FormProvider {...methods}>\n          <form onSubmit={methods.handleSubmit(formSubmitHandler)}>\n            <EmailField />\n            <PasswordField />\n            <SubmitButton text='Login' />\n          </form>\n        </FormProvider >\n      </Grid>\n    </>\n  )\n}\n\nexport default Login;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { FC, useEffect, useState } from 'react';\nimport { Grid, Alert } from '@mui/material';\nimport { useForm, SubmitHandler, FormProvider } from 'react-hook-form';\nimport { ConfirmPasswordField, EmailField, PasswordField, SubmitButton } from '../formContoller/FormController';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { signupFormSchema } from '../../utils/validators';\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { useAuth } from '../providers/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nexport interface IFormInputs {\n  fullName: string,\n  email: string,\n  password: string,\n  confirmPassword: string,\n};\n\nconst Signup: FC = () => {\n  const { auth, user } = useAuth();\n  const methods = useForm<IFormInputs>({\n    resolver: yupResolver(signupFormSchema),\n  });\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (user) navigate(`/user/${user.id}`);\n  }, [user]);\n\n  const formSubmitHandler: SubmitHandler<IFormInputs> = async (data: IFormInputs) => {\n    await createUserWithEmailAndPassword(auth, data.email, data.password)\n      .then((userCredential) => {\n        const user = userCredential.user;\n        navigate(`/user/${user.uid}`);\n      })\n      .catch((error) => {\n        let customError: string = '';\n\n        if (error.code === 'auth/email-already-in-use')\n          customError = 'This email address has already been registered.';\n\n        setError(customError || error.message);\n      });\n  }\n\n  return (\n    <>\n      {error && (\n        <Alert severity='error' style={{ margin: 20 }}>\n          {error}\n        </Alert>\n      )}\n      <h1>Sign up</h1>\n      <Grid display='flex' justifyContent='center' alignItems='center' height=''>\n        <FormProvider {...methods}>\n          <form onSubmit={methods.handleSubmit(formSubmitHandler)}>\n            <EmailField />\n            <PasswordField />\n            <ConfirmPasswordField />\n            <SubmitButton text='Sign up' />\n          </form>\n        </FormProvider >\n      </Grid>\n    </>\n  )\n}\n\nexport default Signup;","export default __webpack_public_path__ + \"static/media/avatar-default-icon.3d77e961.png\";","import { Login, NotFound, Signup, UserPage } from \"../pages\";\n\nexport const routes = [\n  {\n    path: '/',\n    element: Login,\n    auth: false,\n  },\n  {\n    path: '/user/:id',\n    element: UserPage,\n    auth: true,\n  },\n  {\n    path: '/signup',\n    element: Signup,\n    auth: false,\n  },\n  {\n    path: '*',\n    element: NotFound,\n    auth: false,\n  },\n];","import React, { FC, useEffect, useState } from 'react';\nimport classes from './UserPage.module.css'\nimport { Alert, Avatar, Button, TextField } from '@mui/material';\nimport defaultAvatar from '../../../assets/avatar-default-icon.png';\nimport { useAuth } from '../../providers/useAuth';\nimport { updateEmail, updatePassword } from \"firebase/auth\";\n\nconst UserPage: FC = () => {\n  const { auth, user } = useAuth();\n  const [emailEditMod, setEmailEditMode] = useState(false);\n  const [emailValue, setEmailValue] = useState('');\n  const [passwordEditMod, setPasswordEditMode] = useState(false);\n  const [passwordValue, setPasswordValue] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  useEffect(() => {\n    if (user?.email) setEmailValue(user.email);\n  }, [user]);\n\n  const onUpdateEmail = () => {\n    if (auth.currentUser) {\n      updateEmail(auth.currentUser, emailValue).then(() => {\n        setSuccess('Email change was successful!');\n        setError('');\n      }).catch((error) => {\n        let customError: string = '';\n\n        if (error.code === 'auth/requires-recent-login')\n          customError = 'You need to log into your account AGAIN to change your mail.';\n        if (error.code === 'auth/invalid-email')\n          customError = 'Please enter a valid email.';\n\n        setError(customError || error.message);\n        setSuccess('');\n\n        if (user?.email) setEmailValue(user.email);\n      });\n    }\n  }\n\n  const saveNewEmail = () => {\n    onUpdateEmail();\n    setEmailEditMode(false);\n  }\n\n  const onUpdatePassword = () => {\n    let customError: string = '';\n\n    if (passwordValue.length < 8) {\n      customError = 'Password must be at least 8 characters.';\n      setError(customError);\n    }\n\n    if (auth.currentUser) {\n      updatePassword(auth.currentUser, passwordValue).then(() => {\n        setSuccess('Password change was successful!');\n        setError('');\n      }).catch((error) => {\n        if (error.code === 'auth/requires-recent-login')\n          customError = 'You need to log into your account AGAIN to change your password.';\n\n        setError(customError || error.message);\n        setSuccess('');\n      });\n    }\n  }\n\n  const saveNewPassword = () => {\n    onUpdatePassword();\n    setPasswordEditMode(false);\n    setPasswordValue('');\n  }\n\n  return (\n    <div className={classes.wrap}>\n      <Avatar src={defaultAvatar} sx={{ width: 300, height: 300 }}></Avatar>\n      {error && (\n        <Alert severity='error' style={{ margin: 20 }}>\n          {error}\n        </Alert>\n      )}\n      {success && (\n        <Alert severity='success' style={{ margin: 20 }}>\n          {success}\n        </Alert>\n      )}\n      <div className={classes.items}>\n\n        {!emailEditMod &&\n          <div className={classes.email}>\n            <div>{emailValue}</div>\n            <Button onClick={() => setEmailEditMode(true)} size=\"small\"\n              variant=\"contained\" sx={{ marginLeft: 2 }}>Change email</Button>\n          </div>}\n\n        {emailEditMod &&\n          <div className={classes.email}>\n            <TextField label=\"Enter new email\"\n              variant=\"standard\"\n              onChange={(e) => setEmailValue(e.target.value)}\n            />\n            <Button onClick={saveNewEmail} size=\"small\"\n              variant=\"contained\" sx={{ marginLeft: 2 }}>Save</Button>\n            <Button onClick={() => setEmailEditMode(false)}\n              size=\"small\" variant=\"contained\" sx={{ marginLeft: 2 }}>Canсel</Button>\n          </div>}\n\n        {!passwordEditMod &&\n          <Button onClick={() => setPasswordEditMode(true)} size=\"small\"\n            variant=\"contained\">Change password</Button>}\n\n        {passwordEditMod &&\n          <div className={classes.item}>\n            <TextField label=\"Enter new password\"\n              type=\"password\"\n              variant=\"standard\"\n              onChange={(e) => setPasswordValue(e.target.value)}\n            />\n            <Button onClick={saveNewPassword} size=\"small\"\n              variant=\"contained\">Save</Button>\n            <Button onClick={() => setPasswordEditMode(false)}\n              size=\"small\" variant=\"contained\" sx={{ marginLeft: 2 }}>Canсel</Button>\n          </div>}\n\n      </div>\n    </div>\n  )\n}\n\nexport default UserPage;\n","import React, { FC } from 'react';\n\nconst NotFound: FC = () => {\n  return (\n    <div>\n      <h1>Not found</h1>\n    </div>\n  )\n}\n\nexport default NotFound;\n","import React, { FC } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Layout from '../layout/Layout';\nimport { Login } from '../pages';\nimport { useAuth } from '../providers/useAuth';\nimport { routes } from './list';\n\nconst AppRoutes: FC = () => {\n  const { user } = useAuth();\n\n  return (\n    <Routes>\n      <Route path='/' element={<Layout />}>\n        {routes.map(route => {\n          return (\n            <Route\n              path={route.path}\n              element={route.auth && !user ? <Login /> : <route.element />}\n              key={`route ${route.path}`}\n            />\n          )\n        })}\n      </Route>\n    </Routes>\n  )\n}\n\nexport default AppRoutes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport * as firebase from 'firebase/app';\nimport AppRoutes from './components/routes/Routes';\nimport { BrowserRouter } from 'react-router-dom';\nimport { AuthProvider } from './components/providers/AuthProvider';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDCpry19k3lALtiix4kQ3I4zzijM3LW14o\",\n  authDomain: \"user-page-3cfeb.firebaseapp.com\",\n  projectId: \"user-page-3cfeb\",\n  storageBucket: \"user-page-3cfeb.appspot.com\",\n  messagingSenderId: \"74694622364\",\n  appId: \"1:74694622364:web:6651db478f9b970af14159\",\n  measurementId: \"G-7WN52ZJP4C\"\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <AuthProvider>\n        <AppRoutes />\n      </AuthProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"UserPage_wrap__10sJT\",\"items\":\"UserPage_items__2yU0S\",\"email\":\"UserPage_email__jDHl5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Header_wrap__2P2Pp\",\"logo\":\"Header_logo__3fwT6\"};"],"sourceRoot":""}